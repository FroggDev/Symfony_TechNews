# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.articles.assets.dir: '%kernel.project_dir%/public/images/product'
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    ################
    # Swift Mailer #
    ################

    app.mail.register:
        class: App\Controller\Security\SecurityController
        arguments:
            - "@swiftmailer.mailer"

    ################
    # TWIG FILTERS #
    ################

    # enable Twig dump
    app.twig.extension.debug:
        class:        Twig_Extension_Debug
        tags:
             - { name: 'twig.extension' }

    # Common String Custom Twig Filter
    app.twig_runtime_common_string:
        class: App\Service\Twig\Common\StringAppRuntime
        tags:
            - { name: twig.runtime }

    # Common Twig function
    app.twig_runtime_function:
        class: App\Service\Twig\AppRuntime
        tags:
            - { name: twig.runtime }

    # Article Custom Twig Filter @router & @assets injection
    app.twig_runtime_article:
        class: App\Service\Twig\Entity\ArticleAppRuntime
        arguments:
            - "@router"
            - "@assets.packages"
        tags:
            - { name: twig.runtime }

    # Category Custom Twig Filter @router & @assets injection
    app.twig_runtime_category:
        class: App\Service\Twig\Entity\CategoryAppRuntime
        arguments:
            - "@router"
            - "@assets.packages"
        tags:
            - { name: twig.runtime }

    # Author Custom Twig Filter @router & @assets injection
    app.twig_runtime_author:
        class: App\Service\Twig\Entity\AuthorAppRuntime
        arguments:
            - "@router"
            - "@assets.packages"
        tags:
            - { name: twig.runtime }

    # Search Custom Twig Filter @router & @assets injection
    app.twig_runtime_search:
        class: App\Service\Twig\Entity\SearchAppRuntime
        arguments:
            - "@router"
            - "@assets.packages"
        tags:
            - { name: twig.runtime }

    # last article Custom Twig Filter @router & @assets injection
    app.twig_runtime_last:
        class: App\Service\Twig\Entity\LastAppRuntime
        arguments:
            - "@router"
            - "@assets.packages"
        tags:
            - { name: twig.runtime }

    ####################
    # CONSOLE COMMANDS #
    ####################

    # create a new database entry
    app.command_createDatabaseEntry:
        class: App\Command\CreateDatabaseEntry
        arguments: [doctrine.orm.entity_manager]